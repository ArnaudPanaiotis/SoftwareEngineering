# From StarUML user manual http://staruml.sourceforge.net/docs/user-guide(en)/ch09.html

1  --- AssociationEnds within an Association must have unique names. --- Association
2  --- Two or more Aggregations or Composite AssociationEnds cannot exist within an Association. --- Association
3  --- Parameters must have unique names. --- BehavioralFeature
4  --- Attributes of the same name cannot exist within a Classifier. --- Classifier
5  --- AssociationEnds on the other side must have unique names. --- Classifier
6  --- An Attribute cannot have the same name as the Association on the other side, or as elements included in Classifier. --- Classifier
7  --- AssociationEnd on the other side cannot have the same name as elements included in Classifier or its Attribute name. --- Classifier
8  --- Root element cannot have elements that are more generalized than itself. --- GeneralizableElement
9  --- Leaf element cannot have elements that are more specialized than itself. --- GeneralizableElement
10  --- Looped inheritance structure is not allowed. --- GeneralizableElement
11  --- All features of interfaces must be public. --- Interface
12  --- ComponentInstance must accurately assign a component as its origin. --- ComponentInstance
13  --- NodeInstance must accurately assign a node as its origin. --- NodeInstance
14  --- AssociationEndRole must be connected with ClassifierRole. --- AssociationEndRole
15  --- ClassifierRole cannot have its own features. --- ClassifierRole
16  --- ClassifierRole cannot become the ClassifierRole for another ClassifierRole. --- ClassifierRole
17  --- Sender and receiver of a message must participate in the collaboration that constitutes the interaction context. --- Message
18  --- Actor can only have associations that are connected to UseCase, Class or Subsystem. --- Actor
19  --- CompositeState can have a maximum of one initial state only. --- CompositeState
20  --- CompositeState can have a maximum of one deep history only. --- CompositeState
21  --- CompositeState can have a maximum of one shallow history only. --- CompositeState
22  --- Concurrent composite state must contain a minimum of two composite states. --- CompositeState
23  --- Concurrent state can only have composite state as its sub state. --- CompositeState
24  --- Final state cannot have outgoing transition. --- FinalState
25  --- Initial state can have a maximum of one outgoing transition and cannot have incoming transition. --- Pseudostate
26  --- History state can have a maximum of one outgoing transition. --- Pseudostate
27  --- Junction vertex must have a minimum of one incoming transition and one outgoing transition each. --- Pseudostate
28  --- Choice vertex must have a minimum of one incoming transition and one outgoing transition each. --- Pseudostate
29  --- StateMachine can be integrated either with Classifier or with BehavioralFeature. --- StateMachine
30  --- Top state must always be composite state. --- StateMachine
31  --- No state can contain top state. --- StateMachine
32  --- Top state cannot have outgoing transition. --- StateMachine
33  --- SubmachineState cannot have concurrency. --- SubmachineState
34  --- Transition that points to Pseudostate cannot have Trigger. --- Transition
35  --- ActivityGraph can express dynamic behavior of Package, Classifier or BehavioralFeature. --- ActivityGraph
36  --- ActionState cannot have internal transition, exit action or do activity. --- ActionState
37  --- Outgoing transition of ActionState cannot have trigger event. --- ActionState
38  --- SubactivityState must have connection to ActivityGraph. --- SubactivityState
